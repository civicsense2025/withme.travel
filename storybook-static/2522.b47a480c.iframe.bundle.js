"use strict";(self.webpackChunkwithme_travel=self.webpackChunkwithme_travel||[]).push([[2522],{"./components/maps/mapbox-geocoder.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),_mapbox_mapbox_gl_geocoder__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@mapbox/mapbox-gl-geocoder/lib/index.js"),_mapbox_mapbox_gl_geocoder__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(_mapbox_mapbox_gl_geocoder__WEBPACK_IMPORTED_MODULE_2__),mapbox_gl__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/mapbox-gl/dist/mapbox-gl.js"),mapbox_gl__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(mapbox_gl__WEBPACK_IMPORTED_MODULE_3__);__webpack_require__("./node_modules/@mapbox/mapbox-gl-geocoder/dist/mapbox-gl-geocoder.css"),__webpack_require__("./node_modules/mapbox-gl/dist/mapbox-gl.css");const MapboxGeocoderComponent=({onResult,initialValue,options})=>{const geocoderContainerRef=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null),geocoderInstanceRef=(0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);return(0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((()=>{if(geocoderContainerRef.current){const container=geocoderContainerRef.current,geocoder=new(_mapbox_mapbox_gl_geocoder__WEBPACK_IMPORTED_MODULE_2___default())({accessToken:"pk.eyJ1Ijoid2l0aG1ldHJhdmVsIiwiYSI6ImNtOXgwaTZ0NjA0ZHoya29sdmMzNzg3Y3AifQ.1IsSpIpf0hEeZz9KaTLQmg",mapboxgl:mapbox_gl__WEBPACK_IMPORTED_MODULE_3___default(),marker:!1,...options});return geocoder.addTo(container),geocoderInstanceRef.current=geocoder,initialValue&&geocoder.setInput(initialValue),geocoder.on("result",(e=>{e.result&&onResult(e.result)})),geocoder.on("clear",(()=>{onResult(null)})),()=>{if(geocoderInstanceRef.current=null,container)for(;container.firstChild;)container.removeChild(container.firstChild)}}}),[onResult,initialValue,options]),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{ref:geocoderContainerRef,className:"mapbox-geocoder"})},__WEBPACK_DEFAULT_EXPORT__=MapboxGeocoderComponent;MapboxGeocoderComponent.__docgenInfo={description:"",methods:[],displayName:"MapboxGeocoderComponent",props:{onResult:{required:!0,tsType:{name:"signature",type:"function",raw:"(result: GeocoderResult | null) => void",signature:{arguments:[{type:{name:"union",raw:"GeocoderResult | null",elements:[{name:"GeocoderResult"},{name:"null"}]},name:"result"}],return:{name:"void"}}},description:""},initialValue:{required:!1,tsType:{name:"string"},description:""},options:{required:!1,tsType:{name:"Omit",elements:[{name:"GeocoderOptions"},{name:"union",raw:"'accessToken' | 'mapboxgl'",elements:[{name:"literal",value:"'accessToken'"},{name:"literal",value:"'mapboxgl'"}]}],raw:"Omit<GeocoderOptions, 'accessToken' | 'mapboxgl'>"},description:""}}}}}]);