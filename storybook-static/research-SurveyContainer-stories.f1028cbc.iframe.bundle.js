"use strict";(self.webpackChunkwithme_travel=self.webpackChunkwithme_travel||[]).push([[8220],{"./components/research/SurveyContainer.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Implementation:()=>Implementation,SingleMilestoneSurvey:()=>SingleMilestoneSurvey,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_SurveyContainer__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./components/research/SurveyContainer.tsx"),_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs");jest.mock("@/hooks/use-survey",(()=>({useSurvey:()=>({submitSurveyResponse:async()=>((0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.XI)("submitSurveyResponse")(),{success:!0}),trackEvent:async()=>((0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.XI)("trackEvent")(),{success:!0}),submitting:!1})})));const __WEBPACK_DEFAULT_EXPORT__={title:"Research/Organisms/SurveyContainer",component:_SurveyContainer__WEBPACK_IMPORTED_MODULE_1__.e,tags:["autodocs"],parameters:{layout:"centered",docs:{description:{component:"`SurveyContainer` is a multi-step container for user testing and research flows.\nIt manages the full survey experience from welcome screen to completion."}}}},mockSurvey={id:"survey-1",name:"Product Feedback Survey",description:"Help us improve your experience with withme.travel",type:"feedback",is_active:!0,config:{fields:[{id:"q1",label:"How satisfied are you with our service?",type:"radio",required:!0,milestone:"satisfaction",options:[{value:"very-dissatisfied",label:"Very Dissatisfied"},{value:"dissatisfied",label:"Dissatisfied"},{value:"neutral",label:"Neutral"},{value:"satisfied",label:"Satisfied"},{value:"very-satisfied",label:"Very Satisfied"}]},{id:"q2",label:"What features do you use most often?",type:"select",required:!0,milestone:"satisfaction",options:[{value:"trip-planning",label:"Trip Planning"},{value:"itinerary-sharing",label:"Itinerary Sharing"},{value:"destination-discovery",label:"Destination Discovery"},{value:"group-collaboration",label:"Group Collaboration"}]},{id:"q3",label:"Would you recommend our service to others?",type:"rating",required:!0,milestone:"recommendation",min:0,max:10,description:"0 = Not at all likely, 10 = Extremely likely"},{id:"q4",label:"Any additional feedback for us?",type:"textarea",required:!1,milestone:"recommendation",placeholder:"Your thoughts here..."}]},created_at:"2025-01-01T00:00:00Z"},Default={args:{survey:mockSurvey,sessionId:"session-123",onComplete:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.XI)("Survey Completed")}},SingleMilestoneSurvey={args:{survey:{...mockSurvey,name:"Quick Feedback",description:"A quick single-step feedback form",config:{fields:mockSurvey.config.fields.filter((field=>"satisfaction"===field.milestone))}},sessionId:"session-123",onComplete:(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_2__.XI)("Single-Milestone Survey Completed")}},Implementation={parameters:{docs:{source:{code:"\n// Usage in a page or component\nimport { SurveyContainer } from '@/components/research/SurveyContainer';\nimport { useParams } from 'next/navigation';\nimport { useSurveyLoader } from '@/hooks/use-survey-loader';\n\nexport default function SurveyPage() {\n  const { surveyId } = useParams();\n  const { survey, state, error } = useSurveyLoader(surveyId);\n  \n  if (state === 'loading') return <div>Loading survey...</div>;\n  if (state === 'error') return <div>Error: {error?.message}</div>;\n  if (!survey) return <div>Survey not found</div>;\n  \n  return (\n    <SurveyContainer\n      survey={survey}\n      sessionId=\"user-session-id\" // Generate or get from context\n      onComplete={() => {\n        // Handle completion, e.g., redirect\n        console.log('Survey completed!');\n      }}\n    />\n  );\n}\n"}}},render:()=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"p-6 max-w-3xl mx-auto bg-muted rounded-lg",children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h2",{className:"text-lg font-semibold mb-2",children:"SurveyContainer Implementation"}),(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("p",{className:"text-sm text-muted-foreground mb-4",children:"The SurveyContainer orchestrates the entire survey flow from welcome to completion. See source code tab for implementation example."})]})},__namedExportsOrder=["Default","SingleMilestoneSurvey","Implementation"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    survey: mockSurvey,\n    sessionId: 'session-123',\n    onComplete: action('Survey Completed')\n  }\n}",...Default.parameters?.docs?.source},description:{story:"Default survey container with multi-step flow",...Default.parameters?.docs?.description}}},SingleMilestoneSurvey.parameters={...SingleMilestoneSurvey.parameters,docs:{...SingleMilestoneSurvey.parameters?.docs,source:{originalSource:"{\n  args: {\n    survey: {\n      ...mockSurvey,\n      name: 'Quick Feedback',\n      description: 'A quick single-step feedback form',\n      config: {\n        fields: mockSurvey.config.fields.filter(field => field.milestone === 'satisfaction')\n      }\n    },\n    sessionId: 'session-123',\n    onComplete: action('Single-Milestone Survey Completed')\n  }\n}",...SingleMilestoneSurvey.parameters?.docs?.source},description:{story:"A single-milestone survey",...SingleMilestoneSurvey.parameters?.docs?.description}}},Implementation.parameters={...Implementation.parameters,docs:{...Implementation.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    docs: {\n      source: {\n        code: `\n// Usage in a page or component\nimport { SurveyContainer } from '@/components/research/SurveyContainer';\nimport { useParams } from 'next/navigation';\nimport { useSurveyLoader } from '@/hooks/use-survey-loader';\n\nexport default function SurveyPage() {\n  const { surveyId } = useParams();\n  const { survey, state, error } = useSurveyLoader(surveyId);\n  \n  if (state === 'loading') return <div>Loading survey...</div>;\n  if (state === 'error') return <div>Error: {error?.message}</div>;\n  if (!survey) return <div>Survey not found</div>;\n  \n  return (\n    <SurveyContainer\n      survey={survey}\n      sessionId=\"user-session-id\" // Generate or get from context\n      onComplete={() => {\n        // Handle completion, e.g., redirect\n        console.log('Survey completed!');\n      }}\n    />\n  );\n}\n`\n      }\n    }\n  },\n  render: () => <div className=\"p-6 max-w-3xl mx-auto bg-muted rounded-lg\">\n      <h2 className=\"text-lg font-semibold mb-2\">SurveyContainer Implementation</h2>\n      <p className=\"text-sm text-muted-foreground mb-4\">\n        The SurveyContainer orchestrates the entire survey flow from welcome to completion.\n        See source code tab for implementation example.\n      </p>\n    </div>\n}",...Implementation.parameters?.docs?.source},description:{story:"A simple implementation without mocking, for documentation purposes.\nNote: This will not function in Storybook without proper API implementation.",...Implementation.parameters?.docs?.description}}}}}]);