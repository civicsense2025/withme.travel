"use strict";(self.webpackChunkwithme_travel=self.webpackChunkwithme_travel||[]).push([[3963],{"./app/lib/onboarding/hooks/use-onboarding.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{checkTourCompletionStatus:()=>checkTourCompletionStatus,markTourAsCompleted:()=>markTourAsCompleted});__webpack_require__("./node_modules/next/dist/compiled/react/index.js");var _utils_supabase_browser_client__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./utils/supabase/browser-client.ts"),_utils_constants_tables__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./utils/constants/tables.ts"),console=__webpack_require__("./node_modules/console-browserify/index.js");async function checkTourCompletionStatus(tourId,options){if(null==options?void 0:options.isGuest)return!1;try{if("undefined"!=typeof localStorage){if("true"===localStorage.getItem(`tour-completed-${tourId}`))return!0}{const supabase=(0,_utils_supabase_browser_client__WEBPACK_IMPORTED_MODULE_1__.getBrowserClient)(),{data}=await supabase.auth.getUser(),user=null==data?void 0:data.user;if(!user)return!1;const{data:completionData,error}=await supabase.from(_utils_constants_tables__WEBPACK_IMPORTED_MODULE_2__.CG.ONBOARDING_TOUR_COMPLETIONS).select("*").eq("user_id",user.id).eq("tour_id",tourId).single();return error&&"PGRST116"!==error.code?(console.error("Error checking tour completion:",error),!1):!!completionData}}catch(error){console.error("Error in checkTourCompletionStatus:",error)}return!1}async function markTourAsCompleted(tourId,isSkipped=!1,options){try{if("undefined"!=typeof localStorage&&localStorage.setItem(`tour-completed-${tourId}`,"true"),null==options?void 0:options.isGuest)return!0;{const supabase=(0,_utils_supabase_browser_client__WEBPACK_IMPORTED_MODULE_1__.getBrowserClient)(),{data}=await supabase.auth.getUser(),user=null==data?void 0:data.user;if(!user)return!1;const{error}=await supabase.from(_utils_constants_tables__WEBPACK_IMPORTED_MODULE_2__.CG.ONBOARDING_TOUR_COMPLETIONS).upsert({user_id:user.id,tour_id:tourId,completed_at:(new Date).toISOString(),is_skipped:isSkipped});return!error||(console.error("Error marking tour as completed:",error),!1)}}catch(error){console.error("Error in markTourAsCompleted:",error)}return!1}}}]);